name: Fetch Discord Messages and Commit

on:
  schedule:
    # Runs at 00:00 UTC every day
    - cron: '*/5 * * * *'
  workflow_dispatch: # Allows manual triggering from the Actions tab

jobs:
  fetch-and-save:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      # This action checks out your repository code onto the runner.
      uses: actions/checkout@v4

    - name: Setup Node.js
      # Sets up the Node.js environment on the runner.
      uses: actions/setup-node@v4
      with:
        node-version: '20.x' # Or your preferred Node.js version

    - name: Install dependencies
      # Installs the project dependencies from package.json.
      run: npm install

    - name: Run script to fetch messages
      # Executes your Node.js script.
      # The DISCORD_TOKEN is accessed securely from GitHub Secrets.
      env:
        DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
      run: node index.js # Running your script named index.js

    - name: Commit and push changes
      # Adds, commits, and pushes the generated messages.txt file back to the repository.
      run: |
        # Configure Git user for the commit
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'

        # Check if the file was created/modified
        if [ -f messages.txt ]; then
          git add messages.txt
          # Check if there are any changes to commit
          if git diff --staged --quiet; then
            echo "No changes to commit."
          else
            git commit -m "update(messages.txt)"
            # Push changes back to the repository
            # Use GITHUB_TOKEN for authentication
            git pull --rebase
            git push
          fi
        else
          echo "messages.txt was not created by the script."
          exit 1 # Fail the job if the file is missing
        fi
